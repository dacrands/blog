{"version":3,"sources":["webpack:///./src/components/aside.js","webpack:///./src/templates/blogTemplate.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js"],"names":["aside","react_default","a","createElement","gatsby_browser_entry","query","render","data","className","to","allMarkdownRemark","edges","map","post","node","frontmatter","path","activeStyle","color","title","date","_2202940348","Template","_ref","markdownRemark","html","layout","dangerouslySetInnerHTML","__html","__webpack_require__","d","__webpack_exports__","pageQuery","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Layout","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-templates-blog-template-js-233eac7caaf241e04cd2.js","sourcesContent":["import React from 'react'\r\nimport { StaticQuery, graphql, Link } from 'gatsby'\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query AsideQuery {\r\n        allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\r\n          edges {\r\n            node {\r\n              frontmatter {\r\n                path\r\n                date(formatString: \"MMMM DD, YYYY\")\r\n                title\r\n                info\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <aside className=\"aside\">\r\n        <nav className=\"aside__nav\">\r\n          <Link to=\"/\" className=\"aside__nav-title\">\r\n            <h2>Blog</h2>\r\n            <small>by David Crandall</small>\r\n          </Link>\r\n          {data.allMarkdownRemark.edges.map(post => {\r\n            return (\r\n              <Link\r\n                className=\"aside__nav-link\"\r\n                to={post.node.frontmatter.path}\r\n                activeStyle={{ color: '#a8b1ce' }}\r\n              >\r\n                <p>{post.node.frontmatter.title}</p>\r\n                <small>{post.node.frontmatter.date}</small>\r\n              </Link>\r\n            )\r\n          })}\r\n        </nav>\r\n      </aside>\r\n    )}\r\n  />\r\n)\r\n","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Aside from '../components/aside'\r\nimport Footer from '../components/footer'\r\nimport Layout from '../components/layout'\r\n\r\nexport default function Template({ data }) {\r\n  const { markdownRemark } = data\r\n  const { frontmatter, html } = markdownRemark\r\n  return (\r\n    <Layout>\r\n      <main className=\"grid--aside\">\r\n        <Aside />\r\n        <article className=\"blog\">\r\n          <header className=\"blog__header\">\r\n            <div className=\"container\">\r\n              <h1>{frontmatter.title}</h1>\r\n              <h3>{frontmatter.date}</h3>\r\n            </div>\r\n          </header>\r\n          <div className=\"blog__post\">\r\n            <div\r\n              className=\"blog__post-content\"\r\n              dangerouslySetInnerHTML={{ __html: html }}\r\n            />\r\n          </div>\r\n        </article>\r\n      </main>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        path\r\n        title\r\n        info\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport '../styles/main.scss'\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <div>{children}</div>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}