webpackJsonp([0xc573fbc7510f],{348:function(n,s){n.exports={data:{markdownRemark:{html:'<p><em>This post is a WIP</em></p>\n<p><img src="https://i.imgur.com/LE7G4bH.jpg" alt="flask file app"></p>\n<p>I recently built a file-hosting application using Flask. Nothing fancy â€” users can upload, download, and delete files. The catch, however, is that the files are saved directly on the server, and that\'s not good. </p>\n<p>It\'s not good because I need that server space, and common file types (e.g., images, powerpoints, etc.) can be <strong>massive</strong>. Consequently, it won\'t be very long until I run out of memory and things go horribly wrong.</p>\n<p>The solution is to host your files on an <a href="https://aws.amazon.com/s3/">Amazon S3</a>, which is quite easy thanks to the library <a href="https://boto3.amazonaws.com/v1/documentation/api/latest/index.html">boto3</a>. I will dedicate another post to discuss how I converted this app from hosting the files from the server to S3 (namely because I am still building the S3 version), but first let\'s look at the <strong>wrong</strong> way to create a file-hosting app.</p>\n<h2>Introduction</h2>\n<hr>\n<p>This application is a highly modified version of <a href="http://flask.pocoo.org/docs/1.0/patterns/fileuploads/">Flask\'s documentation on file-uploading</a>. Before I present the code, here are a few key-points:</p>\n<ul>\n<li>\n<p><strong>It\'s important to designate what files users can upload.</strong> This ensures no one will upload a file that runs on our server and causes damage, such as those with a <code class="language-text">.bash</code> file-extension.</p>\n<div class="gatsby-highlight" data-language="python">\n      <pre class="language-python"><code class="language-python">ALLOWED_EXTENSIONS <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'txt\'</span><span class="token punctuation">,</span> <span class="token string">\'pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'png\'</span><span class="token punctuation">,</span> <span class="token string">\'jpg\'</span><span class="token punctuation">,</span> <span class="token string">\'jpeg\'</span><span class="token punctuation">,</span> <span class="token string">\'gif\'</span><span class="token punctuation">,</span> <span class="token string">\'docx\'</span><span class="token punctuation">,</span> <span class="token string">\'xlsx\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<br/>\n</li>\n<li>\n<p><strong>You need to secure your file names.</strong> We import <code class="language-text">secure_filename</code> from <code class="language-text">werkzeug</code> to, well, secure our filenames before saving it. Here is a description of <code class="language-text">secure_filename</code> from the docs:</p>\n<blockquote>\n<p>Pass it a filename and it will return a secure version of it. This filename can then safely be stored on a regular file system and passed to os.path.join(). The filename returned is an ASCII only string for maximum portability.</p>\n</blockquote>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p><strong>os library does the heavy lifting.</strong> We need to use the <em>os</em> library to create/delete folders for each user and save/delete files to/from the local machine. </p>\n<div class="gatsby-highlight" data-language="python">\n      <pre class="language-python"><code class="language-python"><span class="token keyword">import</span> os\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token comment"># Grab the user folder</span>\nuser_file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">\'UPLOAD_FOLDER\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> \n                            <span class="token builtin">str</span><span class="token punctuation">(</span>current_user<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token comment"># Save the uploaded file(s) to the user\'s dir</span>\n<span class="token builtin">file</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>user_file_path<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>\n      </div>\n<br/>\n</li>\n</ul>\n<p>Now that we have a </p>\n<!-- Once users authenticate their account, they may upload files with the following extensions:\n\n\n| Office | Images | Other |\n|:------:|:-----:|:-----:|\n| docx | jpg  | pdf  |\n| xlsx | png  | txt  |\n| ppt  | gif  |      |\n\nThese file extensions reflect what I would typically keep on Google drive, Dropbox, or a USB drive. \n\n```python\nALLOWED_EXTENSIONS = set([\'txt\', \'pdf\', \'png\', \'jpg\', \'jpeg\', \'gif\', \'docx\', \'xlsx\'])\n\n``` -->\n<br />\n<h2>The Heart of the App</h2>\n<hr>\n<p>Here is the primary logic of the application. It has not been refactored or cleaned up at all, since I\'ve been converting this to us <em>S3</em>. </p>\n<div class="gatsby-highlight" data-language="python">\n      <pre class="language-python"><code class="language-python"><span class="token keyword">import</span> os\n<span class="token keyword">from</span> flask <span class="token keyword">import</span> render_template<span class="token punctuation">,</span> redirect<span class="token punctuation">,</span> flash<span class="token punctuation">,</span> request<span class="token punctuation">,</span> \\\n    url_for<span class="token punctuation">,</span> send_from_directory\n<span class="token keyword">from</span> flask_login <span class="token keyword">import</span> login_user<span class="token punctuation">,</span> logout_user<span class="token punctuation">,</span> current_user<span class="token punctuation">,</span> login_required\n<span class="token keyword">from</span> werkzeug<span class="token punctuation">.</span>utils <span class="token keyword">import</span> secure_filename\n<span class="token keyword">from</span> werkzeug<span class="token punctuation">.</span>urls <span class="token keyword">import</span> url_parse\n<span class="token keyword">from</span> app <span class="token keyword">import</span> app<span class="token punctuation">,</span> db\n<span class="token keyword">from</span> app<span class="token punctuation">.</span>models <span class="token keyword">import</span> User<span class="token punctuation">,</span> File\n<span class="token keyword">from</span> app<span class="token punctuation">.</span>forms <span class="token keyword">import</span> LoginForm<span class="token punctuation">,</span> RegistrationForm<span class="token punctuation">,</span> DeleteUserForm\n\nALLOWED_EXTENSIONS <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'txt\'</span><span class="token punctuation">,</span> <span class="token string">\'pdf\'</span><span class="token punctuation">,</span> <span class="token string">\'png\'</span><span class="token punctuation">,</span> <span class="token string">\'jpg\'</span><span class="token punctuation">,</span> <span class="token string">\'jpeg\'</span><span class="token punctuation">,</span> <span class="token string">\'gif\'</span><span class="token punctuation">,</span> <span class="token string">\'docx\'</span><span class="token punctuation">,</span> <span class="token string">\'xlsx\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n\n<span class="token keyword">def</span> <span class="token function">allowed_file</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">return</span> <span class="token string">\'.\'</span> <span class="token keyword">in</span> filename <span class="token operator">and</span> \\\n           filename<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span> ALLOWED_EXTENSIONS\n\n\n@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">\'GET\'</span><span class="token punctuation">,</span> <span class="token string">\'POST\'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n@login_required\n<span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    files <span class="token operator">=</span> current_user<span class="token punctuation">.</span>files\n    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">\'POST\'</span><span class="token punctuation">:</span>\n        <span class="token comment"># check if the post request has the file part</span>\n        <span class="token keyword">if</span> <span class="token string">\'file\'</span> <span class="token operator">not</span> <span class="token keyword">in</span> request<span class="token punctuation">.</span>files<span class="token punctuation">:</span>\n            flash<span class="token punctuation">(</span><span class="token string">\'No file part\'</span><span class="token punctuation">)</span>\n            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>\n        <span class="token builtin">file</span> <span class="token operator">=</span> request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">\'file\'</span><span class="token punctuation">]</span>\n        <span class="token comment"># if user does not select file, browser also</span>\n        <span class="token comment"># submit an empty part without filename</span>\n        <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">.</span>filename <span class="token operator">==</span> <span class="token string">\'\'</span><span class="token punctuation">:</span>\n            flash<span class="token punctuation">(</span><span class="token string">\'No selected file\'</span><span class="token punctuation">)</span>\n            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>\n        <span class="token keyword">if</span> <span class="token builtin">file</span> <span class="token operator">and</span> allowed_file<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>\n            filename <span class="token operator">=</span> secure_filename<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>filename<span class="token punctuation">)</span>\n            <span class="token comment"># see if user has file of same name</span>\n            <span class="token comment"># if so, prompt them to rename the file</span>\n            <span class="token keyword">for</span> f <span class="token keyword">in</span> files<span class="token punctuation">:</span>                \n                <span class="token keyword">if</span> f<span class="token punctuation">.</span>name <span class="token operator">==</span> filename<span class="token punctuation">:</span>\n                    flash<span class="token punctuation">(</span><span class="token string">\'You already have a file with that name! Please rename your file and upload.\'</span><span class="token punctuation">)</span>\n                    <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">\'index\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token comment"># make user\'s dir using ID</span>\n            <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">\'UPLOAD_FOLDER\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>current_user<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n                os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>\n                    app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">\'UPLOAD_FOLDER\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>current_user<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            user_file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>\n                app<span class="token punctuation">.</span>config<span class="token punctuation">[</span><span class="token string">\'UPLOAD_FOLDER\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>current_user<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token builtin">file</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>user_file_path<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">)</span>\n            user_file <span class="token operator">=</span> File<span class="token punctuation">(</span>path<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>user_file_path<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                             rel_path<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>\n                                 <span class="token builtin">str</span><span class="token punctuation">(</span>current_user<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">,</span>\n                             name<span class="token operator">=</span>filename<span class="token punctuation">,</span>\n                             user_id<span class="token operator">=</span>current_user<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span>\n            db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>add<span class="token punctuation">(</span>user_file<span class="token punctuation">)</span>\n            db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>\n            flash<span class="token punctuation">(</span><span class="token string">\'File uploaded!\'</span><span class="token punctuation">)</span>\n            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>\n    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">\'index.html\'</span><span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> user<span class="token operator">=</span>current_user<span class="token punctuation">)</span></code></pre>\n      </div>\n<br />\n<h2>How it works</h2>\n<hr>\n<p>When a user signs up, we create use the user\'s id to create a directory:</p>\n<div class="gatsby-highlight" data-language="python">\n      <pre class="language-python"><code class="language-python"></code></pre>\n      </div>\n<br />\n<h2>Schemas</h2>\n<hr>',frontmatter:{path:"/11-21-18",title:"How NOT to Create a Dropbox Clone",tags:["Flask","Python","os library"]}}},pathContext:{}}}});
//# sourceMappingURL=path---11-21-18-ab968c1aaef5c45811e7.js.map