{"data":{"markdownRemark":{"html":"<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/PHP-logo.svg/1280px-PHP-logo.svg.png\" alt=\"php logo\"></p>\n<p>Ah yes, the ever-so controversial PHP. When I was initially getting into web development PHP was one of the first things I considered learning, though this was soon abandoned after somehow developing — through sites like reddit no doubt — a perception of php as dated and, well, bad.</p>\n<p>However, those were the perceptions of a naive programmer — quickly rushing to judgment on a technology one has no experience with.</p>\n<p> And while PHP certainly has its share of memes and haters, a more accurate interpretation of the communities perception towards the language would be thus:</p>\n<blockquote>\n<p>PHP has a bad reputation because a lot of inexperienced programmers built crappy things with it. However, if you follow best-practice, it is an extremely powerful tool for building websites.   </p>\n</blockquote>\n<p>Anyway, let's get to some code and uncover the enigma that is PHP!</p>\n<h2>Configuring PHP</h2>\n<p>Here's the tutorial I used to configure PHP on Mojave OS: <a href=\"https://discussions.apple.com/docs/DOC-13841\">Setting up a local web server on macOS 10.14 “Mojave”</a></p>\n<p>I decided to use my MacBook Pro for this since Apple computers come with PHP already installed, the trick is you need to activate it.</p>\n<p>This means manipulating the <code class=\"language-text\">/etc/apache2/httpd.conf</code> file, which if done improperly can destroy your machine, so make sure you follow the directions in tutorial linked above to the <code class=\"language-text\">#</code>!</p>\n<h2>The Project</h2>\n<p>Here is the github repo to what we are building: <a href=\"https://github.com/dacrands/php-mysql-practice\">php-mysql repo</a>.</p>\n<p>After going through the tutorial linked above, you should know where your PHP files are being served from on your machine. It is likely from a directory located at <code class=\"language-text\">/Users/&lt;username&gt;/Sites/</code> and can be accessed in your browser via <code class=\"language-text\">http://localhost/~&lt;username&gt;</code></p>\n<p>We're going to make a little form that sign's a user up to a MySQL database. Create a directory <em>php-form</em> in your <em>Sites</em> folder and add the following files:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/php-form\n    header.php\n    form.php\n    sql.php</code></pre></div>\n<br/>\n<h3>form.php</h3>\n<p>Open <code class=\"language-text\">form.php</code> and add the following code:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">include</span> <span class=\"token single-quoted-string string\">'header.php'</span> <span class=\"token delimiter important\">?></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>jumbotron<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>display-3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Sign up<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>lead<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Join us as we explore PHP and SQL!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sql.php<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n                Name: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n                Password: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>btn btn-primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Sign Up<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<br />\n<p>Everything inside <code class=\"language-text\">&lt;?php ?&gt;</code> is PHP code, so you may notice only one line of PHP here used to import our header file. That's what makes PHP so interesting. This is a <em>.php</em> file, yet it's essentially all HTML. And though we will soon see that PHP has much more powerful functionality than allowing HTML in our files, this just demonstrates that PHP is a language for websites.</p>\n<!-- When you navigate to `http://localhost/~<username>/php-form/form.php` you should see the sign-up page.  -->\n<p>Now let's open our <em>header.php</em> and see another another interesting way in which PHP interacts with HTML.</p>\n<h3>header.php</h3>\n<p>Add the following code to <em>header.php</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'\n&lt;!DOCTYPE html> \n&lt;html lang=\"en\"> \n&lt;head> \n    &lt;meta charset=\"UTF-8\"> \n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> \n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\"> \n    &lt;title>Sign Up&lt;/title> \n    &lt;link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\n&lt;/head>\n'</span>\n<span class=\"token delimiter important\">?></span></span></code></pre></div>\n<br />\n<p>After you save, refresh the browser and you should see a simple sign-up page with some Bootstrap stylings.</p>\n<p>As I mentioned above, <strong>everything</strong> inside of <code class=\"language-text\">&lt;?php ... ?&gt;</code> is PHP code. In this example, we are using the <em>echo</em> function to <strong>generate</strong> HTML. </p>\n<p>I didn't add a <em>footer.php</em>, so that I suggest you try adding it now. </p>\n<h3>sql.php</h3>\n<p>Before getting started, you will need a MySQL db to connect to. If you are not familiar with MySQL/don't have it installed, I suggest you work through their documentation before moving forward: <a href=\"https://dev.mysql.com/doc/mysql-getting-started/en/\">Getting Started with MySQL</a></p>\n<p>Okay, now we are really going to get a taste of what PHP can do. I am going to show the entire file first, then we will break it down:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">include</span> <span class=\"token single-quoted-string string\">'header.php'</span> <span class=\"token delimiter important\">?></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>jumbotron<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>display-3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Registration<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>lead<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Join us as we explore PHP and SQL!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> \n            <span class=\"token comment\">// Connect to DB</span>\n            <span class=\"token variable\">$config</span> <span class=\"token operator\">=</span> <span class=\"token function\">parse_ini_file</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"../../../private/config.ini\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$host</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"127.0.0.1\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$mysqli</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_connect</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$host</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"username\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"menagerie\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">mysqli_connect_errno</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mysqli</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"Failed to connect to MySQL: \"</span> <span class=\"token punctuation\">.</span> <span class=\"token function\">mysql_connect_errno</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">// Check if user table exists</span>\n            <span class=\"token comment\">// TODO find the right way to do this</span>\n            <span class=\"token variable\">$query</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"SELECT * FROM user\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$res</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mysqli</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$query</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// Create user table  if it doesn't exist</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>    \n                <span class=\"token variable\">$res</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span>\n                    <span class=\"token variable\">$mysqli</span><span class=\"token punctuation\">,</span> \n                    <span class=\"token double-quoted-string string\">\"CREATE TABLE user (name VARCHAR(20), password VARCHAR(60))\"</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\">// User sign up</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>   \n                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">TRUE</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>        \n                    <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token function\">htmlspecialchars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token function\">password_hash</span><span class=\"token punctuation\">(</span>\n                        <span class=\"token function\">htmlspecialchars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token constant\">PASSWORD_BCRYPT</span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n                    <span class=\"token comment\">// Make sure form fields aren't empty</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"Missing form data &lt;br/>\"</span><span class=\"token punctuation\">;</span>        \n                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                    <span class=\"token comment\">// Check if user exists already</span>\n                    <span class=\"token variable\">$name_query</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"SELECT * FROM user WHERE name='<span class=\"token interpolation\"><span class=\"token variable\">$name</span></span>';\"</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token variable\">$name_res</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mysqli</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$name_query</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$name_res</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">num_rows</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"That user exists &lt;br/>\"</span><span class=\"token punctuation\">;</span>      \n                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>  \n                    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                        <span class=\"token comment\">// Sign the user up            </span>\n                        <span class=\"token variable\">$new_query</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"INSERT INTO user (name, password) VALUES ('<span class=\"token interpolation\"><span class=\"token variable\">$name</span></span>', '<span class=\"token interpolation\"><span class=\"token variable\">$password</span></span>')\"</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token variable\">$name_res</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mysqli</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$new_query</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">echo</span>  <span class=\"token double-quoted-string string\">\"User Successfully signed up &lt;br/>\"</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>      \n                <span class=\"token punctuation\">}</span> \n            <span class=\"token punctuation\">}</span> \n        <span class=\"token delimiter important\">?></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>form.php<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Go back<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<br />\n<h4>db logic</h4>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$config</span> <span class=\"token operator\">=</span> <span class=\"token function\">parse_ini_file</span><span class=\"token punctuation\">(</span><span class=\"token double-quoted-string string\">\"../../../private/config.ini\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$host</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"127.0.0.1\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/*\n mysqli_connect(\"127.0.0.1\", \"my_user\", \"my_password\", \"my_db\"); \n*/</span>\n<span class=\"token variable\">$mysqli</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_connect</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$host</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"username\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token double-quoted-string string\">\"menagerie\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br />\n<p>In php <code class=\"language-text\">$</code> is used to declare variables. Here I am using the built-in function <code class=\"language-text\">parse_ini_file()</code> to parse a <em>config.ini</em> file, though for practice purposes on your local machine you just pass the raw strings. </p>\n<p>Let's check to make sure the connection was succesful:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">mysqli_connect_errno</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mysqli</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"Failed to connect to MySQL: \"</span> <span class=\"token punctuation\">.</span> <span class=\"token function\">mysql_connect_errno</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<br />\n<p><code class=\"language-text\">mysqli_connect_errno</code> returns the following, from the docs:</p>\n<blockquote>\n<p>An error code value for the last call to mysqli_connect(), if it failed. zero means no error occurred. </p>\n</blockquote>\n<p>Like Python and JavaScript, <code class=\"language-text\">0</code> is falsey in PHP.</p>\n<ul>\n<li>When routed to, <em>sql.php</em> connects to a MySQL database. </li>\n<li>When a user submits a post, <em>sql.php</em> uses the string function <code class=\"language-text\">htmlspecialchars()</code> to remove potentially malicious code from the form data. It will also verify that the form data is not empty.</li>\n<li></li>\n</ul>\n<h4>Check if user table exists</h4>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$query</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"SELECT * FROM user\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$res</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mysqli</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$query</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Create user table  if it doesn't exist</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$res</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>    \n    <span class=\"token variable\">$res</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span>\n        <span class=\"token variable\">$mysqli</span><span class=\"token punctuation\">,</span> \n        <span class=\"token double-quoted-string string\">\"CREATE TABLE user (name VARCHAR(20), password VARCHAR(60))\"</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br />\n<p>So I am almost positive this is not the proper way to do this, but it is a temporary solution to see if our user table exists. </p>\n<p>We are using <code class=\"language-text\">mysqli_query()</code> to pass queries to our db object. If there is not a user table, <em>$res</em> will return a falsely value — if there is no user table, we will create one.</p>\n<h4>POST Logic</h4>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>   \n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">TRUE</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>        \n        <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token function\">htmlspecialchars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token function\">password_hash</span><span class=\"token punctuation\">(</span>\n            <span class=\"token function\">htmlspecialchars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token constant\">PASSWORD_BCRYPT</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token comment\">// Make sure form fields aren't empty</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"Missing form data &lt;br/>\"</span><span class=\"token punctuation\">;</span>        \n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// Check if user exists already</span>\n        <span class=\"token variable\">$name_query</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"SELECT * FROM user WHERE name='<span class=\"token interpolation\"><span class=\"token variable\">$name</span></span>';\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$name_res</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mysqli</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$name_query</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$name_res</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">num_rows</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token double-quoted-string string\">\"That user exists &lt;br/>\"</span><span class=\"token punctuation\">;</span>      \n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>  \n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Sign the user up            </span>\n            <span class=\"token variable\">$new_query</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"INSERT INTO user (name, password) VALUES ('<span class=\"token interpolation\"><span class=\"token variable\">$name</span></span>', '<span class=\"token interpolation\"><span class=\"token variable\">$password</span></span>')\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$name_res</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mysqli</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$new_query</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">echo</span>  <span class=\"token double-quoted-string string\">\"User Successfully signed up &lt;br/>\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>      \n    <span class=\"token punctuation\">}</span> \n<span class=\"token punctuation\">}</span> </code></pre></div>\n<br />\n<h4>$_POST</h4>\n<p>First, let's talk a little bit about <em>$_POST</em>. Here is it's description from the <a href=\"https://www.php.net/manual/en/reserved.variables.post.php\">PHP documentation</a>:</p>\n<blockquote>\n<p>[ $_POST ] is an associative array of variables passed to the current script via the HTTP POST method when using application/x-www-form-urlencoded or multipart/form-data as the HTTP Content-Type in the request.</p>\n</blockquote>\n<p>You can think of an <a href=\"https://www.php.net/manual/en/language.types.array.php\">associative array</a> as a dictionary, object, hash-table. Basically an implementation of key-value mapping. Thus, to get the values from our post, we can pass a key to <em>$_POST</em> (e.g., <code class=\"language-text\">$_POST[&quot;name&quot;]</code>).</p>\n<p>Furthermore, <em>$_POST</em> is what is known as a <em>superglobal</em>, which is defined the in the docs as the following:</p>\n<blockquote>\n<p>[ $_POST ] is a 'superglobal', or automatic global, variable. This simply means that it is available in all scopes throughout a script. There is no need to do global $variable; to access it within functions or methods.</p>\n</blockquote>\n<p>Here is a list of the PHP Superglobals: <a href=\"https://www.php.net/manual/en/language.variables.superglobals.php\">PHP Superglobal list</a></p>\n<p>Once we submit a <em>post</em> to <em>sql.php</em>, we'll enter our <code class=\"language-text\">if ($_POST)</code> block, and thus our <code class=\"language-text\">while (TRUE)</code> loop, where we'll make use of some more powerful built-in PHP functions.</p>\n<h4>htmlspecialchars()</h4>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"> <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token function\">htmlspecialchars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br />\n<p>Remember how easily we generated HTML using PHP in our header file? Well, it's okay if <em>we</em> are generating HTML, but we don't want the user to generate HTML, which may include malicious scripts via <code class=\"language-text\">&lt;script&gt;</code> elements. What <em>htmlspecialchars()</em> does is convert things meaningful to HTML, such as <em>></em>, <em>&#x3C;</em> symbols, into their <a href=\"https://www.w3.org/TR/html4/intro/sgmltut.html#h-3.2.3\">character reference</a>, (e.g., &#x26; to &#x26;amp;).</p>\n<h4>password_hash()</h4>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token function\">password_hash</span><span class=\"token punctuation\">(</span>\n            <span class=\"token function\">htmlspecialchars</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token double-quoted-string string\">\"password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token constant\">PASSWORD_BCRYPT</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </code></pre></div>\n<br/>\n<p>Now that our user input is clean, we'll need to hash our password. And, you guessed it, PHP has a built-in function for that: <a href=\"https://php.net/manual/en/function.password-hash.php\">password_hash()</a>. From the docs:</p>\n<blockquote>\n<p><strong>password_hash()</strong> creates a new password hash using a strong one-way hashing algorithm. <strong>password_hash()</strong> is compatible with <strong>crypt()</strong>. Therefore, password hashes created by <strong>crypt()</strong> can be used with <strong>password_hash()</strong>.</p>\n</blockquote>\n<p>We'll use <em>bcrypt</em> for security purposes, though it obviously supports other algos.</p>","frontmatter":{"date":"May 03, 2019","path":"/blog/5-3-2019","title":"Diving into PHP and SQL","info":"My first exposure to PHP. Come with me as I build basic sign-up page."}}},"pageContext":{}}