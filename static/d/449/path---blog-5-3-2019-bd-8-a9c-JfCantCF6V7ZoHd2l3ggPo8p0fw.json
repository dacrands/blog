{"data":{"markdownRemark":{"html":"<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/PHP-logo.svg/1280px-PHP-logo.svg.png\" alt=\"php logo\"></p>\n<p>Ah yes, the ever-so controversial PHP. When I was initially getting into web development PHP was one of the first things I considered learning, though this was soon abadoned after somehow developing — through sites like reddit no doubt — a perception of php as dated and, well, bad.</p>\n<p>However, those were the perceptions of a naive programmer — quickly rushing to judgment on a technology one has no experience with.</p>\n<p> And while PHP certainly has its share of memes and haters, a more accurate interpretation of the communities perception towards the language would be thus:</p>\n<blockquote>\n<p>PHP has a bad reputation because a lot of inexperienced programmers built crappy things with it. However, if you follow best-practice, it is an extremely powerful tool for building websites.   </p>\n</blockquote>\n<p>Anyway, let's get to some code and uncover the enigma that is PHP!</p>\n<h2>Configuring PHP</h2>\n<p>Here's the tutorial I used to configure PHP on Mojave OS: <a href=\"https://discussions.apple.com/docs/DOC-13841\">Setting up a local web server on macOS 10.14 “Mojave”</a></p>\n<p>I decided to use my MacBook Pro for this since Apple computers come with PHP already installed, the trick is you need to activate it.</p>\n<p>This means manipulating the <code class=\"language-text\">/etc/apache2/httpd.conf</code> file, which if done improperly can destroy your machine, so make sure you follow the directions in tutorial linked above to the <code class=\"language-text\">#</code>!</p>\n<h2>The Project</h2>\n<p>We're going to make a little form that sign's a user up. Here is what the application will do:</p>\n<ul>\n<li>Provide a <em>form</em> with <code class=\"language-text\">action=&quot;sql.php&quot;</code> and <code class=\"language-text\">method=post</code></li>\n<li><em>sql.php</em> will connect to a MySQL database. </li>\n<li>When a user submits a post, <em>sql.php</em> will using the string function <code class=\"language-text\">htmlspecialchars()</code> to clean the data. It will also verify the <em>form</em> data</li>\n</ul>","frontmatter":{"date":"May 03, 2019","path":"/blog/5-3-2019","title":"Diving into PHP and SQL","info":"My first exposure to PHP. Come with me as I build basic sign-up page."}}},"pageContext":{}}