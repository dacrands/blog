{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/aside.js","webpack:///./src/components/navbar.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","className","to","allMarkdownRemark","edges","map","post","node","frontmatter","path","activeStyle","color","date","_public_static_d_4112491792_json__WEBPACK_IMPORTED_MODULE_0__","Navbar","_Component","call","this","react__WEBPACK_IMPORTED_MODULE_3___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","Component","siteTitle","defaultProps","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Footer","react_default","href","Date","getFullYear","Layout","gatsby_browser_entry","Fragment","footer","_755544856","SEO","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-79c8fed536c2fec135ea.js","sourcesContent":["import React from 'react'\r\n\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"404: Not found\" />\r\n    <h1>NOT FOUND</h1>\r\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n  </Layout>\r\n)\r\n\r\nexport default NotFoundPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\r\nimport { StaticQuery, graphql, Link } from \"gatsby\"\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query AsideQuery {\r\n        allMarkdownRemark(sort:{ order: DESC, fields: [frontmatter___date]}) {\r\n          edges {\r\n            node {\r\n              frontmatter {\r\n                path\r\n                date(formatString: \"MMMM DD, YYYY\")\r\n                title\r\n                info\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <aside className=\"aside\">      \r\n        <nav className=\"aside__nav\">\r\n        <Link to=\"/\" className=\"aside__nav-title\">\r\n          <h2>Blog</h2>\r\n          <small>by David Crandall</small>\r\n        </Link>          \r\n          {\r\n            data.allMarkdownRemark.edges.map(post => {\r\n              return <Link className=\"aside__nav-link\"\r\n                to={post.node.frontmatter.path}\r\n                activeStyle={{color: '#a8b1ce'}}\r\n              >\r\n                  <p>{post.node.frontmatter.title}</p>\r\n                  <small>{post.node.frontmatter.date}</small>\r\n                </Link>\r\n            })\r\n          }    \r\n        </nav>        \r\n      </aside>\r\n    )}\r\n  />\r\n)","import { Link } from 'gatsby'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\n\r\nclass Navbar extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <ul>\r\n          <li><Link to=\"/\">Home</Link></li>\r\n          <li><Link to=\"/blog\">Blog</Link></li>\r\n        </ul>\r\n      </nav>\r\n    )    \r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  siteTitle: `David Crandall`,\r\n}\r\n\r\nexport default Navbar\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n  <div>\r\n    {/* <a href=\"\">Resume</a> */}\r\n    <a className=\"footer__link\" href=\"https://github.com/dacrands\">Github</a>\r\n    <a className=\"footer__link\" href=\"mailto:davecrands@gmail.com\">Email</a>\r\n  </div>\r\n  <div>\r\n    © {new Date().getFullYear()},\r\n              {` `}\r\n    David Crandall\r\n              </div>\r\n  </footer>\r\n)\r\n\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nimport Navbar from './navbar'\r\nimport Aside from './aside'\r\nimport Footer from './footer'\r\nimport './layout.scss'\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>        \r\n        <div>\r\n          {children}          \r\n        </div>\r\n        <Footer />\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}