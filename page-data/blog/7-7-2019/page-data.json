{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/7-7-2019","webpackCompilationHash":"","result":{"data":{"markdownRemark":{"html":"<p>MIT's \"Structure and Interpretation of Computer Programs (SICP)\" course (<a href=\"https://www.youtube.com/watch?v=2QgZVYI3tDs&#x26;list=PLE18841CABEA24090&#x26;index=1\">Link to Youtube Playlist</a>) has really been a pleasure to watch. I wouldn't think that a computer programming course taught in Lisp from 1986 would do me much good, but I have been pleasantly surprised with the course so far. </p>\n<p>The course covers a number of topics. Here are a few:</p>\n<ul>\n<li>Wishful thinking</li>\n<li>Casting spirits</li>\n<li>Giving work to some person name George</li>\n</ul>\n<p>What? </p>\n<p>Exactly.</p>\n<h2>Black Box Abstraction</h2>\n<p>I have this black box I carry around. I feed it some input and it gives me some predictable output. I feed this black box an integer and it gives me its square-root. How does it find the square-root? Well, I don't know, nor do I care, that is not my job to understand how it computes the square-root, I simply know that it does.</p>\n<p>This is important because I may not be the only one using this black box. If someone wants to borrow it for the purpose of computing the square-root of some number, then all they need to know is that my black box will do exactly that. </p>","frontmatter":{"date":"July 07, 2019","path":"/blog/7-7-2019","title":"Programming as Sorcery","info":"Lessons Learned from MIT's \"Structure and Interpretation of Computer Programs\""}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}